name: "Build and push Frontend"
description: "Build frontend and push docker image"

inputs:
  ACTIONS_ALLOW_UNSECURE_COMMANDS:
    required: true
    description: "Are unsecure commands allowed"
  OUTPUT_FOLDER:
    required: true
    description: "Specify output folder."
  ANGULAR_VERSION:
    required: true
    description: "Specify Angular Version"
  ARTIFACT_NAME:
    required: true
    description: "Specify Artifact Name"
  WORKDIR:
    required: true
    description: "Specify WorkDir"
  APP_VERSION:
    required: true
    description: "Application Version"
  SONAR_PROJECT_KEY:
    description: "SonarCloud project token"
    required: true
  GITHUB_TOKEN:
    description: "Github token from github"
    required: true
  SONAR_FRONTEND_TOKEN:
    description: "Sonarcloud frontend token"
    required: true
  ENVIRONMENT:
    description: "Configuration enviroment: dev/test/prod"
    required: true

runs:
  using: "composite"
  steps:
  - name: Node 16.x
    id: setupNode
    uses: actions/setup-node@v1
    with:
      node-version: 16.x
  - name: Cache node modules
    id: cache
    uses: actions/cache@v1
    with:
      path: ~/.npm
      key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      restore-keys: |
        ${{ runner.os }}-node-
  - name: npm install
    working-directory: ${{inputs.WORKDIR}}
    id: installNPMPackages
    shell: bash
    run: |
      npm install --force
  - name: Install Angular CLI
    working-directory: ${{inputs.WORKDIR}}
    id: installNGCLI
    shell: bash
    run: |
      npm install -g @angular/cli@${{inputs.ANGULAR_VERSION}}
  - name: rebuild nodesass
    id: rebuild-node-sass
    shell: bash
    run: |
      npm rebuild node-sass
  - name: npm build
    working-directory: ${{inputs.WORKDIR}}
    id: buildFrontend
    shell: bash
    run: |
      node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build --configuration ${{inputs.ENVIRONMENT}} --output-path ${{inputs.OUTPUT_FOLDER}}
  - name: SonarCloud Scan
    uses: SonarSource/sonarcloud-github-action@master
    with:
      projectBaseDir: ${{ inputs.WORKDIR }}
      args: >
        -Dsonar.projectKey=${{inputs.SONAR_PROJECT_KEY}}
        -Dsonar.organization=sapiency-io
    env:
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }} 
      SONAR_TOKEN: ${{ inputs.SONAR_FRONTEND_TOKEN }}
  - uses: actions/upload-artifact@v2
    name: Publish Artifact
    id: publishArtifact
    with:
      name: ${{inputs.ARTIFACT_NAME}}@${{ inputs.APP_VERSION }}
      path: ${{inputs.OUTPUT_FOLDER}}/
      if-no-files-found: error
    
