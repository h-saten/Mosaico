### Public IP ###

resource "azurerm_public_ip" "pip" {
  name                = "pip-mosaico-${var.env}"
  resource_group_name = var.resource_group
  location            = var.location
  allocation_method   = "Static"
  sku                 = "Standard"

}

locals {
  backend_address_pool_name      = "${var.virtual_network}-beap"
  frontend_port_name             = "${var.virtual_network}-feport"
  frontend_ip_configuration_name = "${var.virtual_network}-feip"
  http_setting_name              = "${var.virtual_network}-be-htst"
  listener_name                  = "${var.virtual_network}-httplstn"
  request_routing_rule_name      = "${var.virtual_network}-rqrt"
  redirect_configuration_name    = "${var.virtual_network}-rdrcfg"
}

resource "azurerm_role_assignment" "agw_assignment" {
  principal_id         = var.msi_id            # Object ID
  role_definition_name = "Key Vault Certificates Officer"#"Key Vault Reader" 
  scope                = "/subscriptions/${var.subscription_id}/resourceGroups/${var.resource_group}/providers/Microsoft.KeyVault/vaults/${var.key_vault_name}"
}

### Application Gateway ###

resource "azurerm_application_gateway" "gateway" {
  name                = "agw-mosaico-${var.env}"
  resource_group_name = var.resource_group
  location            = var.location
  enable_http2        = true

  sku {
    name     = var.sku_type            
    tier     = var.sku_type                 
  } 

  gateway_ip_configuration {
    name      = "gateway-ip-config-${var.env}"
    subnet_id = var.subnet_gateway_id
  }

  identity {
    type         = "UserAssigned"
    identity_ids = [var.managed_identity_id]
  }

  waf_configuration {
    enabled = true
    rule_set_version = 3.1
    firewall_mode = "Prevention"
  }

  autoscale_configuration {
    min_capacity = 1
    max_capacity = 10
  }

  frontend_port {
    name = "${local.frontend_port_name}-80"
    port = 80
  }

  frontend_port {
    name = "${local.frontend_port_name}-443"
    port = 443
  }
  
  ssl_certificate {
    name                = var.key_vault_secret_cert_name
    key_vault_secret_id = var.key_vault_secret_id
  }

  frontend_ip_configuration {
    name                 = "${local.frontend_ip_configuration_name}-public"
    public_ip_address_id = azurerm_public_ip.pip.id #"pip-mosaico-${var.env}" 
  }

  backend_address_pool {
    name = local.backend_address_pool_name
    ip_addresses = ["172.17.0.36"]
  }

  backend_http_settings {
    name                  = local.http_setting_name
    cookie_based_affinity = "Disabled"
    port                  = 443
    protocol              = "Https"
    request_timeout       = 60
  }

  http_listener {
    name                           = "${local.listener_name}-http"
    frontend_ip_configuration_name = "${local.frontend_ip_configuration_name}-public"
    frontend_port_name             = "${local.frontend_port_name}-80"
    protocol                       = "Http"
  }

  http_listener {
    name                           = "${local.listener_name}-https"
    frontend_ip_configuration_name = "${local.frontend_ip_configuration_name}-public"
    frontend_port_name             = "${local.frontend_port_name}-443"
    protocol                       = "Https"
    ssl_certificate_name           = var.key_vault_secret_cert_name
  }

  request_routing_rule {
    name                       = "${local.request_routing_rule_name}-https"
    rule_type                  = "Basic"
    http_listener_name         = "${local.listener_name}-https"
    backend_address_pool_name  = local.backend_address_pool_name
    backend_http_settings_name = local.http_setting_name
  }

  request_routing_rule {
    name                        = "${local.request_routing_rule_name}-http"
    rule_type                   = "Basic"
    http_listener_name          = "${local.listener_name}-http"
    redirect_configuration_name = local.redirect_configuration_name
  }

  redirect_configuration {
    name                 = local.redirect_configuration_name
    redirect_type        = "Permanent"
    include_path         = true
    include_query_string = true
    target_listener_name = "${local.listener_name}-https"
  }
}